CREATE TABLE ODS_LINETYPE
(
  LINETYPE_SK            NUMBER(5)              NOT NULL,
  LINETYPE_CODE          VARCHAR2(20 BYTE)      NOT NULL,
  LINETYPE_DESCR         VARCHAR2(100 BYTE),
  LINETYPE_CREATIONDATE  DATE                   NOT NULL,
  LINETYPE_CREATIONUSER  VARCHAR2(30 BYTE)      NOT NULL
)
TABLESPACE ODS_ODS_TBL
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          160K
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
NOPARALLEL
MONITORING;


CREATE UNIQUE INDEX ODS_LINETYPE_CODE_UIDX ON ODS_LINETYPE
(LINETYPE_CODE)
LOGGING
TABLESPACE INDEXES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          160K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE UNIQUE INDEX ODS_LINETYPE_PIDX ON ODS_LINETYPE
(LINETYPE_SK)
LOGGING
TABLESPACE INDEXES
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          160K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       2147483645
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
NOPARALLEL;


CREATE OR REPLACE TRIGGER ODS_LINETYPE_BIUR_TRI BEFORE INSERT OR UPDATE ON ODS_LINETYPE
FOR EACH ROW
DECLARE
	   tmpVar NUMBER;
/******************************************************************************
   COMPANY: ORACLE
   PROJECT: MIS
   NAME:	ODS_LINETYPE_BIUR_TRI
   PURPOSE: Default values for several columns of the table
   NOTES:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        4/01/2007   GPAPOUTS         1. Created this trigger.
******************************************************************************/
BEGIN
	 IF INSERTING THEN
	 	IF :NEW.LINETYPE_SK IS NULL THEN
          SELECT ODS_LINETYPE_SEQ.NEXTVAL INTO tmpVar FROM dual;
          :NEW.LINETYPE_SK := tmpVar;
		END IF;
		:NEW.LINETYPE_CREATIONDATE	:= SYSDATE;
     	:NEW.LINETYPE_CREATIONUSER	:= nvl(v('APP_USER'), user);
--
		INSERT INTO ODS_SPQUAL_TARG (SPQUAL_DISCRIMINATOR, SPQUAL_DISCRDESCR, SPQUAL_CODE, SPQUAL_DESCR)
			   VALUES (1, 'Ταχύτητα/Ποιότητα', :NEW.LINETYPE_CODE, :NEW.LINETYPE_DESCR);
	 ELSIF UPDATING THEN
	 	IF :NEW.LINETYPE_CODE != :OLD.LINETYPE_CODE THEN
		   BEGIN
		   		INSERT INTO ODS_SPQUAL_TARG (SPQUAL_DISCRIMINATOR, SPQUAL_DISCRDESCR, SPQUAL_CODE, SPQUAL_DESCR)
			   		   VALUES (1, 'Ταχύτητα/Ποιότητα', :NEW.LINETYPE_CODE, :NEW.LINETYPE_DESCR);
		   EXCEPTION
		   		WHEN DUP_VAL_ON_INDEX THEN
					 NULL;
		   END;
		END IF;
	 	IF :NEW.LINETYPE_DESCR = :OLD.LINETYPE_DESCR AND :NEW.LINETYPE_CODE = :OLD.LINETYPE_CODE THEN
	 	   UPDATE ODS_SPQUAL_TARG SET SPQUAL_DESCR = :NEW.LINETYPE_DESCR
		  		 WHERE SPQUAL_DISCRIMINATOR = 1
				 AND SPQUAL_CODE = :NEW.LINETYPE_CODE;
		END IF;
	 END IF;
EXCEPTION
		 WHEN OTHERS THEN
-- Consider logging the error and then re-raise
   			RAISE;
END  ODS_LINETYPE_BIUR_TRI;
/
SHOW ERRORS;



CREATE PUBLIC SYNONYM ODS_LINETYPE FOR ODS_LINETYPE;


ALTER TABLE ODS_LINETYPE ADD (
  CONSTRAINT ODS_LINETYPE_PK
 PRIMARY KEY
 (LINETYPE_SK));

ALTER TABLE ODS_LINETYPE ADD (
  CONSTRAINT ODS_LINETYPE_CODE_UK
 UNIQUE (LINETYPE_CODE));


GRANT ALTER, DELETE, INDEX, INSERT, REFERENCES, SELECT, UPDATE, ON COMMIT REFRESH, QUERY REWRITE, DEBUG, FLASHBACK ON  ODS_LINETYPE TO MIS WITH GRANT OPTION;